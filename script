# ---------------------------
# 1) Configuration
# ---------------------------
$clientId = "YOUR_CLIENT_ID"
$clientSecret = "YOUR_CLIENT_SECRET"

# ---------------------------
# 2) Get access token
# ---------------------------
$tokenBody = @{
    grant_type    = 'client_credentials'
    client_id     = $clientId
    client_secret = $clientSecret
}

try {
    $tokenResponse = Invoke-RestMethod -Uri "https://api.ctpx.secureworks.com/auth/api/v2/auth/token" `
        -Method POST `
        -Body $tokenBody `
        -ContentType "application/x-www-form-urlencoded"

    $token = $tokenResponse.access_token
    Write-Host "‚úÖ Successfully retrieved access token."
} catch {
    Write-Host "‚ùå Failed to get access token: $_"
    exit
}

# ---------------------------
# 3) Build GraphQL query
# ---------------------------
# Basic query: get first 100 events
# Note: adjust fields (id, title, severity, createdAt, etc.) to match your schema
$graphqlQuery = @"
query {
  events(input: {
    rns: ["tenant:$tenantId"],
    filters: {
      severity: [MEDIUM],
      eventType: [ALERT]
    }
  }) {
    id
    eventType
    severity
    summary
    eventTime
  }
}
"@

$body = @{ query = $graphqlQuery } | ConvertTo-Json

$headers = @{
    "Authorization" = "Bearer $token"
    "Content-Type"  = "application/json"
}

# ---------------------------
# 4) Make the API call
# ---------------------------
try {
    $response = Invoke-RestMethod -Uri "https://api.ctpx.secureworks.com/graphql" `
        -Method POST `
        -Headers $headers `
        -Body $body

    Write-Host "‚úÖ Successfully retrieved data from API."
} catch {
    Write-Host "‚ùå API call failed: $_"
    exit
}

# ---------------------------
# 5) Filter and prepare data
# ---------------------------
# Get the raw events array
$events = $response.data.events

# Filter only Medium severity (if the schema doesn‚Äôt support filter inside the query)
$mediumEvents = $events | Where-Object { $_.severity -eq "Medium" }

Write-Host "üìä Retrieved $($mediumEvents.Count) Medium severity events."

# ---------------------------
# 6) Save to CSV
# ---------------------------
$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$outputPath = "$env:USERPROFILE\Desktop\Taegis_MediumEvents_$timestamp.csv"

$mediumEvents | Export-Csv -Path $outputPath -NoTypeInformation

Write-Host "‚úÖ CSV saved to: $outputPath"



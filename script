# -------------------------
# === 1) Set credentials ===
# -------------------------
# REPLACE with your own keys:
$clientId = "YOUR_CLIENT_ID"
$clientSecret = "YOUR_CLIENT_SECRET"

# -------------------------
# === 2) Get access token ===
# -------------------------

$tokenBody = @{
    grant_type    = 'client_credentials'
    client_id     = $clientId
    client_secret = $clientSecret
}

$tokenResponse = Invoke-RestMethod -Uri "https://api.ctpx.secureworks.com/auth/api/v2/auth/token" `
    -Method POST `
    -Body $tokenBody `
    -ContentType "application/x-www-form-urlencoded"

$token = $tokenResponse.access_token
Write-Host "Access Token: $token"

# -------------------------
# === 3) Build GraphQL ===
# -------------------------

# This query requests Medium severity alerts:
$graphqlQuery = @"
query {
  alertsV2(first: 50, filter: { severity: [Medium] }) {
    edges {
      node {
        id
        title
        severity
        createdAt
        updatedAt
        status
      }
    }
    pageInfo {
      endCursor
      hasNextPage
    }
  }
}
"@

$body = @{
    query = $graphqlQuery
} | ConvertTo-Json

$headers = @{
    "Authorization" = "Bearer $token"
    "Content-Type"  = "application/json"
}

# -------------------------
# === 4) Make API call ===
# -------------------------

$response = Invoke-RestMethod -Uri "https://api.ctpx.secureworks.com/graphql" `
    -Method POST `
    -Headers $headers `
    -Body $body

$alerts = $response.data.alertsV2.edges.node

Write-Host "Retrieved $($alerts.Count) alerts."

# -------------------------
# === 5) Save to CSV ===
# -------------------------

# Convert the list of edges to a flat list:
$flatAlerts = $response.data.alertsV2.edges | ForEach-Object { $_.node }

# Pick a path for your CSV:
$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm-ss"
$outputPath = "$env:USERPROFILE\Desktop\Taegis_MediumAlerts_$timestamp.csv"

$flatAlerts | Export-Csv -Path $outputPath -NoTypeInformation

Write-Host "Saved to: $outputPath"


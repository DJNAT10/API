# ------------------------
# Step 1: Get access token
# ------------------------

$body = @{
    grant_type    = 'client_credentials'
    clientId      = "1Bp8mYn5ksihGk7GSJlDkiNCdcsVMmFL"
    clientSecret  = "MkIzui6lB-00oZ7YXKe-egLIH2xaERSnXP0IvqafjYWvxJHWXJwFdrsk0QB_LER4"
}

$response = Invoke-WebRequest -Uri "https://api.ctpx.secureworks.com/auth/api/v2/auth/token" `
    -Method POST -Body $body

$token = ($response.Content | ConvertFrom-Json).access_token

$header = @{
    "Authorization" = "Bearer $token"
    "Content-Type"  = "application/json"
}

# ------------------------
# Step 2: Prepare GraphQL query for only medium alerts
# ------------------------

# Pagination cursor - start from null
[String]$cursor = 'null'
$cursorVal = { if ($cursor -eq "null") {$cursor} else {"""$cursor"""} }

# Create an arraylist to hold results
[Collections.ArrayList]$alertsReport = @()

# ------------------------
# Step 3: Loop through pages
# ------------------------

do {
    Write-Output "Fetching alerts page..."

    # Build GraphQL query string
    $query = @"
query {
  alerts(
    first: 100
    after: $(& $cursorVal)
    filter: { severity: ["Medium"] }
  ) {
    pageInfo {
      endCursor
      hasNextPage
    }
    edges {
      node {
        id
        severity
        title
        description
        createdAt
        source
        status
      }
    }
  }
}
"@

    # Send request
    $result = Invoke-RestMethod -Uri "https://api.ctpx.secureworks.com/graphql" `
        -Method POST -Headers $header -Body (@{ query = $query } | ConvertTo-Json)

    $alertsData = $result.data.alerts

    # Update cursor
    $cursor = $alertsData.pageInfo.endCursor

    # Add alerts to report
    foreach ($edge in $alertsData.edges) {
        [void]$alertsReport.Add($edge.node)
    }

}
while ($alertsData.pageInfo.hasNextPage -eq $true)

Write-Output "Complete. Total alerts fetched: $($alertsReport.Count)"

# ------------------------
# Step 4: Export to CSV
# ------------------------

$timestamp = Get-Date -Format "yyyy-MM-dd HH-mm-ss"
$outputPath = "$env:USERPROFILE\Desktop\Taegis_MediumAlerts_$timestamp.csv"

$alertsReport | Select-Object id, severity, title, description, createdAt, source, status |
    Export-Csv -Path $outputPath -NoTypeInformation

Write-Output "CSV exported to: $outputPath"
